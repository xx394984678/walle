apply plugin: 'maven-publish'

def pushVersion = "1.0.0"
//def pushVersion = "1.0.0-SNAPSHOT"
afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {// 容器可配置的信息 MavenPublication
                // 依赖 bundleReleaseAar 任务，并上传其产出的aar
                from components.java // 注释1:使用 Android Gradle 插件生成的组件，作为发布的内容

                groupId = "com.vcinema.library.walle"
                artifactId = project.name
                version = pushVersion

                artifact generateSorceJar{
                    classifier "sources"
                } //需要上传的source jar
            }
        }

        repositories {
            //本地maven发布
//            maven {
//                //8082是https端口
//                def releasesRepoUrl = "/Users/lirui/Documents/vcinema/AndroidPhone/plugin"
//                def snapshotsRepoUrl = "/Users/lirui/Documents/vcinema/AndroidPhone/plugin"
//                url = pushVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//            }

            maven {
                //8082是https端口
                def vcinemaConfigFile = rootProject.file("vcinema.properties")
                Properties properties = new Properties()
                properties.load(new FileInputStream(vcinemaConfigFile))

                def releasesRepoUrl = rootProject.ext.releasesRepoUrl
                def snapshotsRepoUrl = rootProject.ext.snapshotsRepoUrl
                url = pushVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = properties.getProperty("username")
                    password = properties.getProperty("password")
                }
            }
        }
    }
}

// 1. 增加上传源码的task
task generateSorceJar(type: Jar) {
    from sourceSets.main.allJava
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}