apply plugin: 'com.android.application'
apply plugin: 'walle'
apply from: rootProject.file('quality.gradle')

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 101
        versionName "1.0.1"
        applicationId "com.meituan.android.walle.sample"
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'x86'
            universalApk false
        }
    }

    signingConfigs {
        debug {
            storeFile file('../VCinemaKey.keystore')
            storePassword 'cinema1005'
            keyAlias 'vcinema'
            keyPassword 'cinema1005'
        }
        release {
            storeFile file('../VCinemaKey.keystore')
            storePassword 'cinema1005'
            keyAlias 'vcinema'
            keyPassword 'cinema1005'
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            //Zipalign优化
            debuggable true
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.pro'
        }

        release {
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    productFlavors {
//        china {
//        }
//        international {
//        }
//    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:support-v4:24.1.1'
    implementation 'com.android.support:appcompat-v7:24.1.1'
    implementation project(':library')
}

walle {
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}-${flavorName}.apk'
    //configFile与channelFile两者必须存在一个，否则无法生成渠道包。两者都存在时优先执行configFile
    channelFile = new File("${project.getProjectDir()}/channel")
    //configFile = new File("${project.getProjectDir()}/config.json")
}